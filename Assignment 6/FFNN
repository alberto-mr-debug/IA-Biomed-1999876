LINK TO COLLAB: https://colab.research.google.com/drive/1K5ucjgCgTJKGNTwliRjh3dRZrYhstalG?usp=sharing
#LIBRARY UPLOAD
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.optimizers import Adam

#THIS SPACE IS JUST FOR DONWLOad
(train_data, train_labels), (test_data, test_labels) = mnist.load_data()

#as i understand from tutorials is for data procesing
train_data = train_data / 255.0
test_data = test_data / 255.0


train_labels = to_categorical(train_labels, 10)
test_labels = to_categorical(test_labels, 10)

#this is for traning model and of curse the selection 
model = Sequential()
model.add(Flatten(input_shape=(28, 28))) 
model.add(Dense(128, activation='relu')) 
model.add(Dense(64, activation='relu'))   
model.add(Dense(10, activation='softmax'))  


model.compile(optimizer=Adam(), loss='categorical_crossentropy', metrics=['accuracy'])
history = model.fit(train_data, train_labels, epochs=10, batch_size=32, validation_split=0.2)

#here i just testing the model
test_loss, test_accuracy = model.evaluate(test_data, test_labels)
print(f'Precisión en el conjunto de prueba: {test_accuracy * 100:.2f}%')


# here is just for making the predictions
for i in range(5):
    img = test_data[i]
    prediction = model.predict(np.expand_dims(img, axis=0))
    predicted_label = np.argmax(prediction)
    true_label = np.argmax(test_labels[i])
    
    # Mostrar la imagen y las etiquetas
    plt.imshow(img, cmap='gray')
    plt.title(f'Predicción: {predicted_label}, Real: {true_label}')
    plt.show()


